@{
    string controller = (string)ViewContext.RouteData.Values["controller"];
    string action = (string)ViewContext.RouteData.Values["action"];
}

<!DOCTYPE html>
<html class="no-js" ng-app="appWebBEAUSTORYt">

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Project</title>

    <script src="@Url.Content("~/Scripts/angular.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.js")"></script>
    <!-- animate css -->
    <link href="@Url.Content("~/Content/layout.css")" rel="stylesheet" />
    <!-- bootstrap css -->
    <link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
    <!-- nivo slider css -->
    <link href="@Url.Content("~/Content/star-rating.css")" rel="stylesheet" />
    <link href="@Url.Content("~/Libraries/plugins/bootstrap-daterangepicker/daterangepicker.min.css")" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css?family=Noto+Serif" rel="stylesheet">
    <!-- modernizr js -->
    <script src="@Url.Content("~/Scripts/js.cookie.min.js")"></script>
    <script src="@Url.Content("~/Scripts/InitCookie.js")"></script>
    <script src="@Url.Content("~/Scripts/star-rating.js")"></script>
    <link href="@Url.Content("~/Content/toast/jquery.toast.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Content/toast/jquery.toast.js")"></script>
    <link href="@Url.Content("~/Content/TouchSpin/jquery.bootstrap-touchspin.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Content/TouchSpin/jquery.bootstrap-touchspin.js")"></script>
</head>

<body>
    <div id="fb-root"></div>
    <script async defer crossorigin="anonymous" src="https://connect.facebook.net/vi_VN/sdk.js#xfbml=1&version=v10.0&appId=1160434151102515&autoLogAppEvents=1" nonce="lZDfACAn"></script>
    <header id="header_nhom">
        @Html.Partial("_header")
    </header>
    <div class="mobile_menu">
        <div class="search">
            <input type="text">
            <a href="danhsachsanpham.html">
                <button type="submit"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></button>
            </a>
        </div>
        <ul>
            <li><a href="danhsachsanpham.html">Danh mục Sản phẩm</a></li>
            <li><a href="danhsachsanpham.html">Khuyến Mãi</a></li>
            <li><a href="danhsachloikhuyen.html">Lời Khuyên</a></li>
            <li><a href="danhsachsanpham.html">Sản phẩm khác</a></li>
            <li><a href="chitietsanpham.html">Nước Hoa</a></li>
        </ul>
    </div>
    <!-- Login -->
    <div class="modal fade" id="loginModal" tabindex="-1" role="dialog" aria-labelledby="loginModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <h3>Đăng nhập tài khoản</h3>
                <label><input id="user_login_email" type="text" name="" placeholder="Nhập email hoặc số điện thoại"><span class="glyphicon glyphicon-envelope" aria-hidden="true"></span></label>
                <label><input id="user_login_pass" type="password" name="" placeholder="Nhập mật khẩu từ 6 - 32 ký tự"><span class="glyphicon glyphicon-lock" aria-hidden="true"></span></label>
                <p class="text text-first">Bạn chưa có tài khoản? <a href="#" data-toggle="modal" data-target="#registerModal"><b>Đăng ký ngay</b></a></p>
                <p class="text">Quên mật khẩu?</p>
                <button id="btnSignIn">Đăng nhập</button>
                <p class="text">Nhắn ngay cho chúng tôi khi<br> bạn cần giúp?</p>
                <div class="function_social">
                    <a href="#" class="messenger"></a>
                    <a href="#" class="google"></a>
                </div>
            </div>
        </div>
    </div>
    <!-- Register -->
    <div class="modal fade" id="registerModal" tabindex="-1" role="dialog" aria-labelledby="registerModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <h3>Đăng ký tài khoản</h3>
                <label><input id="user_email" type="text" name="" placeholder="Nhập email hoặc số điện thoại"><span class="glyphicon glyphicon-envelope" aria-hidden="true"></span></label>
                <label><input id="user_pass" type="password" name="" placeholder="Nhập mật khẩu từ 6 - 32 ký tự"><span class="glyphicon glyphicon-lock" aria-hidden="true"></span></label>
                <label><input id="user_name" type="text" name="" placeholder="Họ tên"><span class="glyphicon glyphicon-user" aria-hidden="true"></span></label>
                <div class="birthday row" style="padding-left: 15px; padding-right: 15px; ">
                    <input id="user_Birthday" class="datepicker1 has-feedback-left" placeholder="BirthDate" autocomplete="off" />
                </div>
                <p class="text-first">Nhập thông tin khuyến mãi qua e-mail</p>
                <p>Tôi đã đọc và đồng ý thực hiện mọi giao dịch mua bán theo <span class="red-color">điều kiện sử dụng và chính sách</span> của Beaustory.vn</p>
                <button id="btnSignUp">Đăng ký</button>
                <p>Bạn đã có tài khoản? <a href="#" class="green-color">ĐĂNG NHẬP</a></p>
                <p>Hoặc đăng nhập với:</p>
                <div class="function_social">
                    <a href="#" class="google"></a>
                </div>
            </div>
        </div>
    </div>
    <main class="nhom_thanhtoan nhom_container">
        @RenderBody()
    </main>
    <div class="nhom_footer">
        @Html.Partial("_footer")
    </div>
    <!-- bootstrap -->
    <script src="@Url.Content("~/Scripts/bootstrap.min.js")"></script>
    <script src="@Url.Content("~/Libraries/plugins/moment/moment.min.js")"></script>
    <script src="@Url.Content("~/Libraries/plugins/bootstrap-daterangepicker/daterangepicker.min.js")"></script>
    @*<script src="@Url.Content("~/Scripts/script.js")"></script>*@
    <script src="@Url.Content("~/Scripts/jquery_cookie.js")"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.datepicker1').daterangepicker({
                singleDatePicker: true,
                calender_style: "picker_2",
                maxDate: new Date(),
                //==========
                showDropdowns: true,
                locale: {
                    format: 'DD/MM/YYYY',
                    daysOfWeek: ['CN', 'Hai', 'Ba', 'Tư', 'Năm', 'Sáu', 'Bảy'],
                    monthNames: ['Tháng 1', 'Tháng 2', 'Tháng 3', 'Tháng 4', 'Tháng 5', 'Tháng 6', 'Tháng 7', 'Tháng 8', 'Tháng 9', 'Tháng 10', 'Tháng 11', 'Tháng 12']
                }
            }, function (start, end, label) {
            });
        });

        $('#btnSignUp').click(function () {
            var _userName = $('#user_name').val();
            var _email = $('#user_email').val();
            var _password = $('#user_pass').val();
            var _birthday = $('#user_Birthday').val();
            if (_userName.length > 0 && _email.length > 0 && _password.length > 0 && _birthday.length > 0) {
                $.ajax({
                    url: '@Url.Action("AjaxSignUp", "Login")',
                    type: "post",
                    data: { Email: _email, Password: _password, Name: _userName, BirthDate: _birthday },
                    success: function (data) {
                        if (data.ok == false) {
                            confirm("Đăng ký không thành công!");
                        } else {
                            $('.modal').modal('hide')
                        }
                    },
                    beforeSend: function () {
                    },
                    complete: function () {
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            }
            else {
                confirm("Bạn chưa nhập đầy đủ thông tin!");
            }
        })

        $('#btnSignIn').click(function () {
            var _email = $('#user_login_email').val();
            var _password = $('#user_login_pass').val();
            if (_email.length > 0 && _password.length > 0) {
                $.ajax({
                    beforeSend: function () {
                    },
                    url: '@Url.Action("AjaxLogin", "Login")',
                    type: "post",
                    data: { Email: _email, Password: _password },
                    success: function (data) {
                        if (data.ok == false) {
                            confirm("Đăng nhập không thành công!");
                        } else {
                            if (data.url.length > 0) {
                                window.location.href = data.url
                            } else {
                                $('#LoginModal').modal('hide');
                                window.location.reload();
                            }
                        }
                    },
                    complete: function () {
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            }
            else {
                confirm("Bạn chưa nhập đầy đủ thông tin!");
            }
        })

        function ShowToastMessage(message, type, header) {
            $.toast({
                text: message,
                heading: header,
                icon: type, // 'error','warning','success','info'
                showHideTransition: 'fade',
                allowToastClose: true,
                hideAfter: 3000,
                stack: 10,
                position: 'top-right',
                textAlign: 'left',
                loader: true,
                loaderBg: '#9EC600',
            });
        }
        function ConfirmSwalMessage(title, message, btnConfirmText, btnCancelText, callback) {
            Swal.fire({
                title: title,
                text: message,
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: btnConfirmText,
                cancelButtonText: btnCancelText,
                reverseButtons: true
            }).then((result) => {
                console.log(result);
                if (result.value) {
                    callback();
                }
            })
        }
    </script>

    <script type="text/javascript">
        var GridView;
        function GridViewFunction() {
            var GridView = setTimeout(function () {
                $("#results-holder").removeClass("results-list-view");
                $("#results-holder").addClass("results-grid-view");
                $("#results-list-view").removeClass("active");
                $("#results-grid-view").addClass("active");
                $('body,html').animate({ scrollTop: "212" }, 750, 'easeOutExpo');
            }, 800);
        }
        function GridViewStopFunction() {
            clearTimeout(GridView);
        }
        var ListView;
        function ListViewFunction() {
            var ListView = setTimeout(function () {
                $("#results-holder").removeClass("results-grid-view");
                $("#results-holder").addClass("results-list-view");
                $("#results-grid-view").removeClass("active");
                $("#results-list-view").addClass("active");
                $("#results-holder").find(".result-item").css("height", "auto");
                $('body,html').animate({ scrollTop: "212" }, 750, 'easeOutExpo');
            }, 800);
        }
        function ListViewStopFunction() {
            clearTimeout(ListView);
        }
        $("#results-grid-view").on("click", function () {
            GridViewFunction();
            GridViewStopFunction();
            return false;
        });

        $("#results-list-view").on("click", function () {
            ListViewFunction();
            ListViewStopFunction();
            return false;
        });

        var app = angular.module("appWebBEAUSTORYt", []);
        app.controller("CartCtrl", ["$scope", "$rootScope", function ($scope, $rootScope) {
            $scope.quantityDefault = 1;
            $rootScope.Products = getListOrder();
            /* add cart */
            $scope.AddToCart = function (ItemId, Qty, Price, ImageUrl, Name, Alias) {
                ShowToastMessage("Thay đổi sản phẩm thành công!", 'success', 'Thành Công');
                var qty = $('#amout-number').val();
                qty = parseInt(qty) + parseInt(Qty);
                $('#amout-number').val(qty);
                var _Order = {
                    ItemId: ItemId,
                    Quantity: Qty,
                    Price: Price,
                    Name: Name,
                    Alias: Alias,
                    ImageUrl: ImageUrl,
                    CreateDate: '@DateTime.Now',
                };
                CreateOrUpdateOrder(_Order);
                $rootScope.Products = getListOrder();
                $scope.setTotals($rootScope.Products);
                //$('[id=AjaxifyModal]').removeClass("hidden");
                $(window).scrollTop(0);
            }
            /* close modal */
            $scope.CloseCart = function () {
                $('[id=AjaxifyModal]').addClass("hidden");
            }

            /* update qty of order by order id */
            $scope.UpdateQtyOrder = function ($index) {
                UpdateQuantity($rootScope.Products[$index].ItemId, $rootScope.Products[$index].Quantity);
                var Orders = getListOrder();
                $scope.setTotals(Orders);
            }
            /* count total bill of order */
            $scope.setTotals = function (Orders) {
                var _OrderTotal = 0;
                angular.forEach(Orders, function (item, index) {
                    _OrderTotal += item.Quantity * item.Price;
                });
                $rootScope.OrderTotal = _OrderTotal;
            }

            $scope.QtyAdjust = function ($index, type) {
                if (type == 0) {
                    $rootScope.Products[$index].Quantity -= 1;
                    if (parseInt($rootScope.Products[$index].Quantity) < 1)
                        $rootScope.Products[$index].Quantity = 1;
                }
                else {
                    $rootScope.Products[$index].Quantity += 1;
                }
                UpdateQuantity($rootScope.Products[$index].ItemId, $rootScope.Products[$index].Quantity);
                var Orders = getListOrder();
                $scope.setTotals(Orders);
            }

            $scope.QtyAdjustNoOrder = function (type) {
                if (type == 0) {

                    $scope.Qty = $scope.Qty - 1;
                    if (parseInt($scope.Qty) < 1)
                        $scope.Qty = 1;
                }
                else {
                    $scope.Qty = $scope.Qty + 1;
                }
            }

            $scope.ngChangeQty = function () {
                if (parseInt($scope.Qty) < 1)
                    $scope.Qty = 1;
            }

            $scope.ngBlur = function () {
                if ($scope.Qty.length == 0)
                    $scope.Qty = 1;
            }
            $scope.ngBlurModal = function ($index) {
                if ($rootScope.Products[$index].Quantity.length == 0) {
                    $rootScope.Products[$index].Quantity = 1;
                    UpdateQuantity($rootScope.Products[$index].ItemId, $rootScope.Products[$index].Quantity);
                    var Orders = getListOrder();
                    $scope.setTotals(Orders);
                }

            }

            $scope.RemoveItemOrder = function ($index) {
                RemoveOrderByItemId($rootScope.Products[$index].ItemId);
                var Orders = getListOrder();
                $rootScope.Products = Orders;
                $scope.setTotals(Orders);
            }

            $scope.getTotal = function () {
                var total = 0;
                if ($rootScope.Products != null) {
                    for (var i = 0; i < $rootScope.Products.length; i++) {
                        var product = $rootScope.Products[i];
                        total += (product.Price * product.Quantity);
                    }
                }
                return total;
            }
        }]);

        $(document).ready(function () {
            getListOrder();
            $('.mainnav ul.nav > li:first-child').addClass('active');
            //new WOW().init();
        });
    </script>
    <script src="https://apis.google.com/js/api:client.js"></script>
    <script>
        function UserLogin() {
            var _email = $("#idusername").val();
            var _password = $("#idpassword").val();
            var model = { Email: _email, Password: _password }
            if (_email != null && _email.length > 0 && _password != null && _password.length > 0) {
                $.ajax({
                    url: "@Url.Action("SignIn", "Login")",
                    type: "GET",
                    data: model,
                    dataType: 'json',
                    beforeSend: function () {
                        //$('.se-pre-con').show();
                    },
                    success: function (data) {
                        if (data.Success == false) {
                            $('[id=idusernameeror]').show();
                        }
                    },
                    complete: function () {
                        //  $('.se-pre-con').hide();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                    }
                });
            }
        }
    </script>

</body>
</html>

