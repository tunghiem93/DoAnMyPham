
@model CMS_DTO.CMSProduct.CMS_ProductsModels
@using CMS_Shared
@{
    Html.EnableUnobtrusiveJavaScript(true);
    var _ID = Model.Id;
}
@Html.HiddenFor(model => model.Id)
@if (!string.IsNullOrEmpty(_ID))
{
    @Html.Hidden("ImageURL", Model.ImageURL)
}
<style>
    input[type="file"] {
        display: block;
    }

    .imageThumb {
        height: 100%;
        border: 2px solid;
        margin: 10px 10px 0 0;
        padding: 1px;
        margin-bottom: 15px;
    }

    .img-wrap {
        position: relative;
        font-size: 0;
    }

        .img-wrap .close {
            position: absolute;
            top: 2px;
            right: 2px;
            z-index: 100;
            background-color: #FFF;
            padding: 5px 2px 2px;
            color: #000;
            font-weight: bold;
            cursor: pointer;
            opacity: .2;
            text-align: center;
            font-size: 22px;
            line-height: 10px;
            border-radius: 50% !important;
            text-indent: 0 !important;
        }

        .img-wrap:hover .close {
            opacity: 1;
        }

    .clsContent {
        height: 120px !important;
    }
</style>
<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    <fieldset>
        <legend>GENERAL INFORMATION: </legend>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Product Image</label>
            <div class="col-md-4 col-sm-4 col-xs-12">
                @if (!string.IsNullOrEmpty(Model.ImageURL))
                {
                    <img id="upload-preview" src="@Model.ImageURL" height="220" width="220" class="" />
                }
                else
                {
                    <img id="upload-preview" class="" src="@Commons.Image220_220" height="220" width="220" />
                }
            </div>
            <div class="col-md-1 col-sm-3 col-xs-12" style="line-height:55px;">
                <div class="upload-btn-wrapper" style="cursor:pointer;">
                    <button class="btn btn-default" type="button" onclick="showPictureUpload();" style="margin-top:-6%;margin-left:50px">Select image</button>
                    @Html.TextBoxFor(model => model.PictureUpload, new { @type = "file", @onchange = "PreviewImage(this,\"upload-preview\")", @accept = "*.jpg", @class = "hidden", @id = "urlImage" })
                </div>
                @Html.ValidationMessageFor(model => model.PictureUpload, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Product code</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.ProductCode, new { @class = "form-control", @placeholder = "Product code", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ProductCode, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Product name</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.ProductName, new { @class = "form-control", @placeholder = "Product name", @autocomplete = "off", @onKeyup = "change_alias(this.value)" })
                @Html.ValidationMessageFor(model => model.ProductName, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Alias</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Alias, new { @class = "form-control", @placeholder = "Alias", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Alias, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Category</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.CategoryId,
                    new SelectList(ViewBag.Category, "Value", "Text", Model.CategoryId),"Please choose Category",
                    new
                    {
                        @class = "form-control select2_multiple",
                        @id = "CategoryDdl",
                        @style = "width:100%;"
                    })
                @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "label label-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Brand</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.BrandId,
                    new SelectList(ViewBag.Brand, "Value", "Text", Model.BrandId),"Please choose Brand",
                    new
                    {
                        @class = "form-control select2_multiple",
                        @id = "BrandDdl",
                        @style = "width:100%;"
                    })
                @Html.ValidationMessageFor(model => model.BrandId, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Location</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.LocationId,
                    new SelectList(ViewBag.Location, "Value", "Text", Model.LocationId),"Please choose Brand",
                    new
                    {
                        @class = "form-control select2_multiple",
                        @id = "LocationDdl",
                        @style = "width:100%;"
                    })
                @Html.ValidationMessageFor(model => model.LocationId, null, new { @class = "label label-danger" })
            </div>
        </div>*@  

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight">Status</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.DropDownListFor(model => model.TypeState,
                    new SelectList(ViewBag.State, "Value", "Text", Model.TypeState),"Please choose Status",
                    new
                    {
                        @class = "form-control select2_multiple",
                        @id = "StateDdl",
                        @style = "width:100%;"
                    })
                @Html.ValidationMessageFor(model => model.TypeState, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Year of manufacture</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Year, new { @class = "form-control", @placeholder = "Year of manufacture", @autocomplete = "off", @type = "number" })
                @Html.ValidationMessageFor(model => model.Year, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Price</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.ProductPrice, new { @class = "form-control keyMoney", @placeholder = "Price Product", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ProductPrice, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Price Sale</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.ProductExtraPrice, new { @class = "form-control keyMoney", @placeholder = "Price Sale", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.ProductExtraPrice, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Supplier</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextBoxFor(model => model.Vendor, new { @class = "form-control", @placeholder = "Supplier", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Vendor, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 lineHeight fontLighter">Product information</label>
            <div class="col-md-6 col-sm-6 col-xs-12">
                @Html.TextAreaFor(model => model.Information, new { @class = "form-control clsContent", @placeholder = "Product information", @autocomplete = "off" })
                @Html.ValidationMessageFor(model => model.Information, null, new { @class = "label label-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Status</label>
            <div class="col-md-1 col-sm-1 col-xs-12">
                <label>@Html.CheckBoxFor(model => model.IsActive, new { @class = "icheck" })</label>
            </div>
        </div>

        <!--Description-->
        <div class="form-group">
            <label class="control-label col-md-2 col-sm-2 col-xs-12 fontLighter">Description</label>
            <div class="col-md-9 col-sm-9 col-xs-12">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control ckeditor", placeholder = "Description" })
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "label" })
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Product Image (470 X 366)</legend>
        <!--IMAGE-->
        @*List Image*@
        <div class="form-group">
            <label class="col-sm-2 control-label"></label>
            <div class="col-md-6 col-sm-12">
                <div class="form-group" style="background-color: lightgrey; border: 10px solid green; padding: 5px; margin: 5px; width: 100%; ">
                    <div class="col-md-10 col-sm-12">
                        <span class="fa fa-image" style="font-size: 22px; "><b>&nbsp;&nbsp; List data image</b></span>
                    </div>
                    <div class="col-md-2 col-sm-12">
                        <button id="btn-add-group" class="btn btn-success btn-flat" type="button" onclick="AddImageItem('#list-image-item-product')">
                            <i class="fa fa-plus"></i>&nbsp;&nbsp;Add image
                        </button>
                    </div>
                </div>
                <div class="box-body no-padding">
                    <table class="table table-striped">
                        <tbody id="list-image-item-product">
                            @if (Model.ListImg != null && Model.ListImg.Count > 0)
                            {
                                foreach (var item in Model.ListImg)
                                {
                                    @Html.Partial("_ImageItemProduct", item)
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </fieldset>
</div>
<script src="@Url.Content("~/Scripts/InputCustom.js")"></script>
<script type="text/javascript">

    $(document).ready(function () {
        $("#CategoryDdl").select2({
            placeholder: "Please choose Category",
            //allowClear: true
        });
        $("#BrandDdl").select2({
            placeholder: "Please choose Brand",
            allowClear: true
        });
        $("#LocationDdl").select2({
            placeholder: "Please choose Location",
            allowClear: true
        });
        $("#SizeDdl").select2({
            placeholder: "Please choose Size",
            allowClear: true
        });
        $("#StateDdl").select2({
            placeholder: "Please choose Status",
            //allowClear: true
        });
        $("#StyleDdl").select2({
            placeholder: "Please choose kiểu mẫu",
            //allowClear: true
        });
    });

    function showPictureUpload() {
        $('[id=upload_file]').click();
    }

    function AddImageItem(elemnetFillData) {
        var _OffSet = $('.ng-image-product').length;
        $.ajax({
            url: '@Url.Action("AddImageItem", "CMSProducts")',
            type: 'GET',
            data: {
                OffSet: _OffSet
            },
            dataType: 'html',
            traditional: true,
            beforeSend: function () {
                $('.se-pre-con').show();
            },
            error: function (e) {
            },
            success: function (data) {
                $(elemnetFillData).append(data);
            },
            complete: function () {
                $('.se-pre-con').hide();
            }
        });
    }

    function DeleteImage(e) {
        var tr = $(e).parents('tr:first');
        $(tr).find('input.ImgProStatus').val(true);
        $(tr).hide();
        //========
    }

    function showPictureUpload() {
        $('[id=urlImage]').click();
    }
</script>